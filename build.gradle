plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'maven-publish'


group = 'jp.co.soramitsu'
version = '0.0.1'
description = """EdDSA-SHA3-Java"""

sourceCompatibility = 1.6
targetCompatibility = 1.6

ext {
    artifactId = 'ecdsa'
    repo = 'ed25519-sha3-java'
    git = 'https://github.com/warchant/ed25519-sha3-java.git'
    bintrayUser = System.getenv('BINTRAY_USER')
    bintrayKey = System.getenv('BINTRAY_API_KEY')
    mvnUser = System.getenv('MVN_USER')
    mvnPassword = System.getenv('MVN_PASSWORD')
}



tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()

    maven {
        url  "https://dl.bintray.com/warchant/ed25519-sha3-java"
    }
}
dependencies {
    compile group: 'com.madgag.spongycastle', name: 'core', version: '1.58.0.0'
    compile group: 'com.madgag.spongycastle', name: 'bcpkix-jdk15on', version: '1.58.0.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testCompile group: 'junit', name: 'junit', version:'4.12'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task javadocJar(type: Jar) {
    from javadoc
    classifier 'javadoc'
}

publishing {
    publications {
        Ed25519Sha3Publication(MavenPublication) {
            from components.java
            groupId this.group
            artifactId this.artifactId
            version this.version

            artifact sourcesJar
            artifact javadocJar

//            pom {
//                name = this.name
//                description = this.description
//                url = this.git
//                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id = "warchant"
//                        name = 'Bohdan Vanieiev'
//                        email = 'warchantua@gmail.com'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:git://github.com/warchant/ed25519-sha3-java.git'
//                }
//            }
        }
    }

    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repos"
        }
    }
}

bintray {
    user = "${bintrayUser}"
    key = "${bintrayKey}"

    publications = ['Ed25519Sha3Publication']
    override = true
    publish = true

    pkg {
        repo = this.repo
        name = this.artifactId
        userOrg = this.bintrayUser
        licenses = ['Apache-2.0']
        vcsUrl = this.git
        labels = ['ed25519', 'sha3', 'java']
        publicDownloadNumbers = true
        githubRepo = 'warchant/ed25519-sha3-java'
        githubReleaseNotesFile = 'README.md'
        websiteUrl = this.git
        issueTrackerUrl = this.git + '/issues'

        version {
            name = this.version
            vcsTag = this.version

            released = new Date()

            gpg {
                sign = true
            }

            /*
            mavenCentralSync {
                sync = true //[Default: true] Determines whether to sync the version to Maven Central.
                user = "${mvnUser}"
                password = "${mvnPassword}"
                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
            */
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}

javadoc {
    options.encoding = 'UTF-8'
}


install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId this.group
            artifactId this.artifactId
            version this.version
            name this.artifactId
        }
    }
}
